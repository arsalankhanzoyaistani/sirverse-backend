"""add reel comments

Revision ID: 4dcd657afadf
Revises: 761c19b7559c
Create Date: 2025-10-28 22:43:45.828657

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4dcd657afadf'
down_revision = '761c19b7559c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reel_like', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('reel_like_user_id_reel_id_key'), type_='unique')
        batch_op.create_unique_constraint('_user_reel_unique', ['user_id', 'reel_id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('full_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('avatar',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('otp_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('otp_hash',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('avatar',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)

    with op.batch_alter_table('reel_like', schema=None) as batch_op:
        batch_op.drop_constraint('_user_reel_unique', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('reel_like_user_id_reel_id_key'), ['user_id', 'reel_id'], postgresql_nulls_not_distinct=False)

    # ### end Alembic commands ###
