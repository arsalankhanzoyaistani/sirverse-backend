"""initial

Revision ID: 98e94fdb7928
Revises: 1d2b1228fbce
Create Date: 2025-10-23 01:34:40.756537

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '98e94fdb7928'
down_revision = '1d2b1228fbce'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ai_interaction')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_column('shares_count')
        batch_op.drop_column('title')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('comments_count')
        batch_op.drop_column('likes_count')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('avatar',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.drop_column('is_verified')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('avatar',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.add_column(sa.Column('likes_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('comments_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('shares_count', sa.INTEGER(), autoincrement=False, nullable=True))

    op.create_table('ai_interaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('ai_interaction_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('ai_interaction_pkey'))
    )
    # ### end Alembic commands ###
